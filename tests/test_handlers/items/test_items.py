from unittest.mock import AsyncMock, patch, call

import pytest
from aiogram.utils.markdown import hide_link

import keyboards
from db.user_service import UserService
from handlers.on_start.items import my_items


@pytest.mark.asyncio
async def test_items_not_exist(user_service: UserService):
    message = AsyncMock(text='üõç –º–æ–∏ —Ç–æ–≤–∞—Ä—ã')
    user_service.get_user_products.return_value = None
    await my_items(message, user_service)
    message.answer.assert_called_once_with(
        '–í—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏'
    )


@pytest.mark.asyncio
async def test_items_exist_one_item(user_service: UserService, user_product_item):
    message = AsyncMock(text='üõç –º–æ–∏ —Ç–æ–≤–∞—Ä—ã')
    link_example = 'https://www.google.ru/'
    user_service.get_user_products.return_value = user_product_item
    with patch('api.api_service.get_image') as mock_get_image:
        mock_get_image.return_value = link_example
        await my_items(message, user_service)
    message.answer.assert_called_once_with(
        f"{hide_link(link_example)}–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {'C–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏'}\n"
        f"–ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {300.0}\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {420.0}\n"
        f"–†–∞–∑–Ω–∏—Ü–∞ –≤ —Ü–µ–Ω–µ: {abs(120.0)}\n–¢–µ–∫—É—â–∏–π –ø–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: {'–≤—Å–µ–≥–¥–∞'}\n",
        reply_markup=keyboards.item_card_available_kb(197659450))


@pytest.mark.asyncio
async def test_items_exist_several_items(user_service: UserService, user_product_item):
    message = AsyncMock(text='üõç –º–æ–∏ —Ç–æ–≤–∞—Ä—ã')
    link_example = 'https://www.google.ru/'
    user_service.get_user_products.return_value = user_product_item * 3
    with patch('api.api_service.get_image') as mock_get_image:
        mock_get_image.return_value = link_example
        await my_items(message, user_service)
    call_my_items = call(f"{hide_link(link_example)}–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {'C–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏'}\n"
                         f"–ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {300.0}\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {420.0}\n"
                         f"–†–∞–∑–Ω–∏—Ü–∞ –≤ —Ü–µ–Ω–µ: {abs(120.0)}\n–¢–µ–∫—É—â–∏–π –ø–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: {'–≤—Å–µ–≥–¥–∞'}\n",
                         reply_markup=keyboards.item_card_available_kb(197659450))
    message.answer.assert_has_calls([call_my_items] * 3)
